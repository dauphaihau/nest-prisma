// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  first_name String
  last_name  String
  // user_type  String?
  email      String    @unique
  password   String?
  addresses  Address[]
  orders     Order[]
  cart       Cart?
}

model Address {
  id       Int     @id @default(autoincrement())
  phone    String
  street_1 String
  street_2 String?
  city     String
  state    String
  country  String
  user     User    @relation(fields: [user_id], references: [id])
  user_id  Int
  Cart     Cart?   @relation(fields: [cart_id], references: [id])
  cart_id  Int?
}

model Cart {
  id      Int       @id @default(autoincrement())
  user    User      @relation(fields: [user_id], references: [id])
  user_id Int       @unique
  orders  Order[]
  Address Address[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  product Product?
}

model Shop {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Int
  description String?
  published   Boolean? @default(false)
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int      @unique
  shop        Shop     @relation(fields: [shop_id], references: [id])
  shop_id     Int      @unique
}

model Order {
  id           Int    @id @default(autoincrement())
  order_status String
  total_price  Int
  User         User?  @relation(fields: [userId], references: [id])
  userId       Int?
  Cart         Cart?  @relation(fields: [cartId], references: [id])
  cartId       Int?
}
